Vagrant.configure("2") do |config|

  servers = [
    {
      :id => "1",
      :name => "CentOS 7",
      :box => "centos/7",
      :hostname => "centos7"
    },
    {
      :id => "2",
      :name => "CentOS 8 Stream",
      :box => "centos/stream8",
      :hostname => "centos8"
    },
    {
      :id => "3",
      :name => "CentOS 9 Stream",
      :box => "boxomatic/centos-stream-9",
      :hostname => "centos9"
    },
    {
      :id => "4",
      :name => "Debian 10",
      :box => "generic/debian10",
      :hostname => "debian10"
    },
    {
      :id => "5",
      :name => "Oracle Linux 7",
      :box => "eurolinux-vagrant/oracle-linux-7",
      :hostname => "oraclelinux7"
    },
    {
      :id => "6",
      :name => "Oracle Linux 8",
      :box => "eurolinux-vagrant/oracle-linux-8",
      :hostname => "oraclelinux8"
    },
    {
      :id => "7",
      :name => "Red Hat Enterprise Server 7",
      :box => "generic/rhel7",
      :hostname => "rhel7"
    },
    {
      :id => "8",
      :name => "Red Hat Enterprise Server 8",
      :box => "generic/rhel8",
      :hostname => "rhel8"
    },
    {
      :id => "9",
      :name => "Ubuntu 20.04",
      :box => "generic/ubuntu2004",
      :hostname => "ubuntu2004"
    },
    {
      :id => "10",
      :name => "Ubuntu 22.04",
      :box => "generic/ubuntu2204",
      :hostname => "ubuntu2204"
    }
  ]

  servers.each do |server|
    print server[:id] + " => " + server[:name] + "\n"
  end

  print "Which operating system do you want to provision?: "
  optionServer = STDIN.gets.chomp
  serverFind = servers.select { |server| server[:id] == optionServer }

  if (serverFind.empty?)
    print "ERROR: Operating system entered is not in the available list"
    exit
  end

  serverSelected = serverFind.first()
  print "======= Selected Operating System.. ======= \n"
  print " ID       => " + serverSelected[:id] + "\n"
  print " NAME     => " + serverSelected[:name] + "\n"
  print " BOX      => " + serverSelected[:box] + "\n"
  print " HOSTNAME => " + serverSelected[:hostname] + "\n"
  print "===========================================\n"

  unless Vagrant.has_plugin?("vagrant-disksize")
    raise  Vagrant::Errors::VagrantError.new, "vagrant-disksize plugin is missing. Please install it using 'vagrant plugin install vagrant-disksize' and rerun 'vagrant up'"
  end
  
  config.vm.box = serverSelected[:box]
  config.vm.hostname = serverSelected[:hostname]
  config.disksize.size = "150GB"

  config.vm.provider "virtualbox" do |virtualbox|
    virtualbox.cpus = 4
    virtualbox.memory = "8192"
    virtualbox.name = serverSelected[:hostname]
  end

  config.vm.network "public_network"

  config.vm.synced_folder "./scripts", "/scripts"

  config.vm.provision "shell", inline: <<-SHELL
    #!/bin/bash
    set -ex

    if [[ -f /scripts/custom/custom.sh ]]; then
        bash /scripts/custom/custom.sh || true
    fi
  SHELL
end
